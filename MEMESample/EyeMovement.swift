//
//  EyeMovement.swift
//  Meme
//
//  Created by Shoya Ishimaru on 2015/08/02.
//  Copyright (c) 2015 shoya140. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class EyeMovement : NSObject {

    //// Cache

    private struct Cache {
        static var color2: UIColor = UIColor(red: 0.068, green: 0.064, blue: 0.020, alpha: 1.000)
    }

    //// Colors

    public class var color2: UIColor { return Cache.color2 }

    //// Drawing Methods

    public class func drawCanvas1(horizontal_position horizontal_position: CGFloat, vertical_position: CGFloat, eye: Bool) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let color3 = UIColor(red: 0.178, green: 0.156, blue: 0.022, alpha: 1.000)
        let color = UIColor(red: 0.929, green: 0.949, blue: 0.973, alpha: 1.000)

        //// Variable Declarations
        let position_absolute_left: CGFloat = horizontal_position < 0 ? max(61 + horizontal_position * 10, 10) : min(61 + horizontal_position * 10, 100)
        let position_pupil_left: CGFloat = horizontal_position < 0 ? max(horizontal_position * 2 - 10, -15) : min(horizontal_position * 2 - 10, 0)
        let position_absolute_right: CGFloat = horizontal_position < 0 ? max(58 + horizontal_position * 10, 10) : min(58 + horizontal_position * 10, 100)
        let position_pupil_right: CGFloat = horizontal_position < 0 ? max(horizontal_position * 2 - 12, -10) : min(horizontal_position * 2 - 12, -2)
        let vertical_position_absolute: CGFloat = vertical_position < 0 ? max(vertical_position + 52, 30) : min(vertical_position + 52, 74)

        if (eye) {
            //// Group
            CGContextSaveGState(context)
            CGContextTranslateCTM(context, (position_absolute_left + 31), vertical_position_absolute)



            //// Group 2
            CGContextSaveGState(context)



            //// Oval Drawing
            let ovalPath = UIBezierPath(ovalInRect: CGRectMake(-23, -27, 50, 50))
            color3.setFill()
            ovalPath.fill()


            //// Oval 2 Drawing
            let oval2Path = UIBezierPath(ovalInRect: CGRectMake((position_pupil_left + 2), -13, 22, 22))
            EyeMovement.color2.setFill()
            oval2Path.fill()



            CGContextRestoreGState(context)



            CGContextRestoreGState(context)


            //// Group 3
            CGContextSaveGState(context)
            CGContextTranslateCTM(context, (position_absolute_right + 246), vertical_position_absolute)



            //// Group 4
            CGContextSaveGState(context)



            //// Oval 3 Drawing
            let oval3Path = UIBezierPath(ovalInRect: CGRectMake(-23, -27, 50, 50))
            color3.setFill()
            oval3Path.fill()


            //// Oval 4 Drawing
            let oval4Path = UIBezierPath(ovalInRect: CGRectMake((position_pupil_right + 2), -13, 22, 22))
            EyeMovement.color2.setFill()
            oval4Path.fill()



            CGContextRestoreGState(context)



            CGContextRestoreGState(context)


            //// Bezier 2 Drawing
            CGContextSaveGState(context)
            CGContextTranslateCTM(context, 371, 49)
            CGContextRotateCTM(context, -180 * CGFloat(M_PI) / 180)

            let bezier2Path = UIBezierPath()
            bezier2Path.moveToPoint(CGPointMake(120.12, -0))
            bezier2Path.addCurveToPoint(CGPointMake(64.51, 23.02), controlPoint1: CGPointMake(107.09, 14.47), controlPoint2: CGPointMake(86.57, 23.02))
            bezier2Path.addCurveToPoint(CGPointMake(8.87, -0), controlPoint1: CGPointMake(42.44, 23.02), controlPoint2: CGPointMake(21.9, 14.47))
            bezier2Path.addLineToPoint(CGPointMake(0, -0))
            bezier2Path.addLineToPoint(CGPointMake(0.73, 0.91))
            bezier2Path.addCurveToPoint(CGPointMake(64.51, 29), controlPoint1: CGPointMake(14.94, 18.5), controlPoint2: CGPointMake(38.78, 29))
            bezier2Path.addCurveToPoint(CGPointMake(128.27, 0.9), controlPoint1: CGPointMake(90.23, 29), controlPoint2: CGPointMake(114.06, 18.5))
            bezier2Path.addLineToPoint(CGPointMake(129, -0))
            bezier2Path.addLineToPoint(CGPointMake(120.12, -0))
            bezier2Path.closePath()
            bezier2Path.miterLimit = 4;

            color3.setFill()
            bezier2Path.fill()

            CGContextRestoreGState(context)
        }


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.moveToPoint(CGPointMake(362.12, 49))
        bezier4Path.addCurveToPoint(CGPointMake(306.51, 73.61), controlPoint1: CGPointMake(349.09, 64.47), controlPoint2: CGPointMake(328.57, 73.61))
        bezier4Path.addCurveToPoint(CGPointMake(250.87, 49), controlPoint1: CGPointMake(284.44, 73.61), controlPoint2: CGPointMake(263.9, 64.47))
        bezier4Path.addLineToPoint(CGPointMake(242, 49))
        bezier4Path.addLineToPoint(CGPointMake(242.73, 49.97))
        bezier4Path.addCurveToPoint(CGPointMake(306.51, 80), controlPoint1: CGPointMake(256.94, 68.77), controlPoint2: CGPointMake(280.78, 80))
        bezier4Path.addCurveToPoint(CGPointMake(370.27, 49.97), controlPoint1: CGPointMake(332.23, 80), controlPoint2: CGPointMake(356.06, 68.77))
        bezier4Path.addLineToPoint(CGPointMake(371, 49))
        bezier4Path.addLineToPoint(CGPointMake(362.12, 49))
        bezier4Path.closePath()
        bezier4Path.miterLimit = 4;

        color3.setFill()
        bezier4Path.fill()


        if (eye) {
            //// Bezier 3 Drawing
            CGContextSaveGState(context)
            CGContextTranslateCTM(context, 156, 49)
            CGContextRotateCTM(context, -180 * CGFloat(M_PI) / 180)

            let bezier3Path = UIBezierPath()
            bezier3Path.moveToPoint(CGPointMake(120.12, -0))
            bezier3Path.addCurveToPoint(CGPointMake(64.51, 23.02), controlPoint1: CGPointMake(107.09, 14.47), controlPoint2: CGPointMake(86.57, 23.02))
            bezier3Path.addCurveToPoint(CGPointMake(8.87, -0), controlPoint1: CGPointMake(42.44, 23.02), controlPoint2: CGPointMake(21.9, 14.47))
            bezier3Path.addLineToPoint(CGPointMake(0, -0))
            bezier3Path.addLineToPoint(CGPointMake(0.73, 0.91))
            bezier3Path.addCurveToPoint(CGPointMake(64.51, 29), controlPoint1: CGPointMake(14.94, 18.5), controlPoint2: CGPointMake(38.78, 29))
            bezier3Path.addCurveToPoint(CGPointMake(128.27, 0.9), controlPoint1: CGPointMake(90.23, 29), controlPoint2: CGPointMake(114.06, 18.5))
            bezier3Path.addLineToPoint(CGPointMake(129, -0))
            bezier3Path.addLineToPoint(CGPointMake(120.12, -0))
            bezier3Path.closePath()
            bezier3Path.miterLimit = 4;

            color3.setFill()
            bezier3Path.fill()

            CGContextRestoreGState(context)
        }


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(147.12, 49))
        bezierPath.addCurveToPoint(CGPointMake(91.51, 73.61), controlPoint1: CGPointMake(134.09, 64.47), controlPoint2: CGPointMake(113.57, 73.61))
        bezierPath.addCurveToPoint(CGPointMake(35.87, 49), controlPoint1: CGPointMake(69.44, 73.61), controlPoint2: CGPointMake(48.9, 64.47))
        bezierPath.addLineToPoint(CGPointMake(27, 49))
        bezierPath.addLineToPoint(CGPointMake(27.73, 49.97))
        bezierPath.addCurveToPoint(CGPointMake(91.51, 80), controlPoint1: CGPointMake(41.94, 68.77), controlPoint2: CGPointMake(65.78, 80))
        bezierPath.addCurveToPoint(CGPointMake(155.27, 49.97), controlPoint1: CGPointMake(117.23, 80), controlPoint2: CGPointMake(141.06, 68.77))
        bezierPath.addLineToPoint(CGPointMake(156, 49))
        bezierPath.addLineToPoint(CGPointMake(147.12, 49))
        bezierPath.closePath()
        bezierPath.miterLimit = 4;

        color3.setFill()
        bezierPath.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.moveToPoint(CGPointMake(306.49, 20))
        bezier7Path.addCurveToPoint(CGPointMake(242.73, 48.1), controlPoint1: CGPointMake(280.77, 20), controlPoint2: CGPointMake(256.94, 30.5))
        bezier7Path.addLineToPoint(CGPointMake(242, 49))
        bezier7Path.addLineToPoint(CGPointMake(242.73, 49.97))
        bezier7Path.addCurveToPoint(CGPointMake(306.51, 80), controlPoint1: CGPointMake(256.94, 68.77), controlPoint2: CGPointMake(280.78, 80))
        bezier7Path.addCurveToPoint(CGPointMake(370.27, 49.97), controlPoint1: CGPointMake(332.23, 80), controlPoint2: CGPointMake(356.06, 68.77))
        bezier7Path.addLineToPoint(CGPointMake(371, 49))
        bezier7Path.addLineToPoint(CGPointMake(370.27, 48.09))
        bezier7Path.addCurveToPoint(CGPointMake(306.49, 20), controlPoint1: CGPointMake(356.06, 30.5), controlPoint2: CGPointMake(332.22, 20))
        bezier7Path.closePath()
        bezier7Path.moveToPoint(CGPointMake(91.49, 20))
        bezier7Path.addCurveToPoint(CGPointMake(27.73, 48.1), controlPoint1: CGPointMake(65.77, 20), controlPoint2: CGPointMake(41.94, 30.5))
        bezier7Path.addLineToPoint(CGPointMake(27, 49))
        bezier7Path.addLineToPoint(CGPointMake(27.73, 49.97))
        bezier7Path.addCurveToPoint(CGPointMake(91.51, 80), controlPoint1: CGPointMake(41.94, 68.77), controlPoint2: CGPointMake(65.78, 80))
        bezier7Path.addCurveToPoint(CGPointMake(155.27, 49.97), controlPoint1: CGPointMake(117.23, 80), controlPoint2: CGPointMake(141.06, 68.77))
        bezier7Path.addLineToPoint(CGPointMake(156, 49))
        bezier7Path.addLineToPoint(CGPointMake(155.27, 48.09))
        bezier7Path.addCurveToPoint(CGPointMake(91.49, 20), controlPoint1: CGPointMake(141.06, 30.5), controlPoint2: CGPointMake(117.22, 20))
        bezier7Path.closePath()
        bezier7Path.moveToPoint(CGPointMake(400, 0))
        bezier7Path.addCurveToPoint(CGPointMake(400, 100), controlPoint1: CGPointMake(400, 0), controlPoint2: CGPointMake(400, 100))
        bezier7Path.addLineToPoint(CGPointMake(0, 100))
        bezier7Path.addLineToPoint(CGPointMake(0, 0))
        bezier7Path.addLineToPoint(CGPointMake(400, 0))
        bezier7Path.addLineToPoint(CGPointMake(400, 0))
        bezier7Path.closePath()
        color.setFill()
        bezier7Path.fill()
    }

}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
